{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","append_to_respone","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","searchTerm","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89f4abbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 25px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏳\r\n        </span>\r\n    </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover {\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }    \r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie=false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie => \r\n                            <Poster \r\n                                key={movie.id} \r\n                                id={movie.id} \r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0,4)} \r\n                                isMovie={true}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie => (\r\n                            <Poster \r\n                                key={movie.id} \r\n                                id={movie.id} \r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0,4)} \r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => \r\n                            <Poster \r\n                                key={movie.id} \r\n                                id={movie.id} \r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0,4)} \r\n                                isMovie={true}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst MOVIE_API = process.env.REACT_APP_API_KEY;\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    params: {\r\n        api_key: MOVIE_API,\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_respone: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_respone: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { \r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: { results: popular }\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        }\r\n        catch{\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        }\r\n        finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter \r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n                <Loader />\r\n            ) : (\r\n            <Container>\r\n                {topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map(show => \r\n                            <Poster \r\n                                key={show.id} \r\n                                id={show.id} \r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0,4)} \r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map(show => \r\n                            <Poster \r\n                                key={show.id} \r\n                                id={show.id} \r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0,4)} \r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map(show => \r\n                            <Poster \r\n                                key={show.id} \r\n                                id={show.id} \r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0,4)} \r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>\r\n)\r\n    \r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state ={\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { \r\n                data: { results: topRated } \r\n            } = await tvApi.topRated();\r\n            const { \r\n                data: { results: popular } \r\n            } = await tvApi.popular();\r\n            const { \r\n                data: { results: airingToday } \r\n            } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday });\r\n        }   \r\n        catch{\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        }\r\n        finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        } \r\n    }\r\n    \r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state;\r\n        return ( \r\n            <TVPresenter \r\n                topRated={topRated}\r\n                popular={popular} \r\n                airingToday={airingToday} \r\n                loading={loading} \r\n                error={error}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ \r\n    movieResults, \r\n    tvResults, \r\n    loading, \r\n    error, \r\n    handleSubmit, \r\n    searchTerm,\r\n    updateTerm\r\n}) => ( \r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm}/>\r\n        </Form>\r\n        {loading ? <Loader /> : <>\r\n            {movieResults && movieResults.length > 0 && (\r\n                <Section title=\"Movie Results\">\r\n                    {movieResults.map(movie => \r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date.substring(0,4)} \r\n                            isMovie={true}\r\n                        />\r\n                    )}\r\n                </Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n                <Section title=\"TV Show Results\">\r\n                    {tvResults.map(show => \r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id} \r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0,4)} \r\n                            isMovie={false}\r\n                        />\r\n                    )}\r\n                </Section>\r\n            )}\r\n        </>}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults && \r\n        movieResults && \r\n        tvResults.length===0 && \r\n        movieResults.length===0 && \r\n        <Message color=\"#8395a7\" text=\"Nothing found\" />\r\n        }\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    searchTerm: PropTypes.string,\r\n    updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state ={\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const { \r\n            target: { value } \r\n        } = event;\r\n        console.log(value);\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({loading: true});\r\n        try{\r\n            const { \r\n                data: { \r\n                    results: movieResults \r\n                }\r\n            } = await moviesApi.search(searchTerm);\r\n            const { \r\n                data: { \r\n                    results: tvResults \r\n                }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        }\r\n        catch{\r\n            this.setState({ error: \"Can't find results.\" });\r\n        }\r\n        finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n        return ( \r\n            <SearchPresenter \r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                searchTerm={searchTerm}\r\n                loading={loading} \r\n                error={error}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    height: 100%;\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => (\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        error ? <Message /> : \r\n        <Container>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n            </Helmet>\r\n            <Backdrop \r\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n            />\r\n            <Content>\r\n                <Cover \r\n                    bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")}\r\n                />\r\n                <Data>\r\n                    <Title>\r\n                        {result.original_title ? result.original_title : result.original_name}\r\n                    </Title>\r\n                    <ItemContainer>\r\n                        <Item>\r\n                            {result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}\r\n                        </Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>\r\n                            {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n                        </Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>\r\n                            {result.genres && \r\n                                result.genres.map(\r\n                                    (genre, index) => \r\n                                        index === result.genres.length-1 ? \r\n                                        genre.name : `${genre.name} / `\r\n                                )}\r\n                        </Item>\r\n                    </ItemContainer>\r\n                    <Overview>\r\n                        {result.overview}\r\n                    </Overview>\r\n                </Data>\r\n            </Content>\r\n        </Container>   \r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: { pathname }\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n    state = {\r\n        result: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        const { \r\n            match : {\r\n                params: { id }\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parseId = parseInt(id);\r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try{\r\n            if(isMovie){\r\n                ({\r\n                    data: result\r\n                } = await moviesApi.movieDetail(parseId)); \r\n            }\r\n            else{\r\n                ({\r\n                    data: result\r\n                } = await tvApi.showDetail(parseId));\r\n            }\r\n        }\r\n        catch{\r\n            this.setState({ error: \"Can't find anything\" })\r\n        }\r\n        finally{\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter \r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:50px;\r\n  display:flex;\r\n  align-items:center;\r\n  background-color:rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\"\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;   \r\n        font-size:14px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\r\n//import { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Router from \"Components/Router\"\r\nimport GlobalStyles from 'Components/GlobalStyles';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'Components/App';\r\nimport './api';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}